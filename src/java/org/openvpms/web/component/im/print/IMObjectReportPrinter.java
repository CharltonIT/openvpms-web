/*
 *  Version: 1.0
 *
 *  The contents of this file are subject to the OpenVPMS License Version
 *  1.0 (the 'License'); you may not use this file except in compliance with
 *  the License. You may obtain a copy of the License at
 *  http://www.openvpms.org/license/
 *
 *  Software distributed under the License is distributed on an 'AS IS' basis,
 *  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 *  for the specific language governing rights and limitations under the
 *  License.
 *
 *  Copyright 2006 (C) OpenVPMS Ltd. All Rights Reserved.
 *
 *  $Id$
 */

package org.openvpms.web.component.im.print;

import org.openvpms.archetype.rules.doc.DocumentTemplate;
import org.openvpms.component.business.domain.im.common.IMObject;
import org.openvpms.component.system.common.exception.OpenVPMSException;
import org.openvpms.report.IMReport;
import org.openvpms.web.component.im.report.IMObjectReporter;


/**
 * Prints reports for {@link IMObject}s generated by {@link IMReport}.
 *
 * @author <a href="mailto:support@openvpms.org">OpenVPMS Team</a>
 * @version $LastChangedDate: 2006-05-02 05:16:31Z $
 */
public class IMObjectReportPrinter<T extends IMObject>
        extends TemplatedIMPrinter<T> {

    /**
     * Constructs a new <tt>IMObjectReportPrinter</tt>.
     *
     * @param object the object to print
     * @throws OpenVPMSException for any error
     */
    public IMObjectReportPrinter(T object) {
        this(object, null);
    }

    /**
     * Constructs a new <tt>IMObjectReportPrinter</tt>.
     *
     * @param object   the object to print
     * @param template the document template to use. May be <tt>null</tt>
     * @throws OpenVPMSException for any error
     */
    public IMObjectReportPrinter(T object, DocumentTemplate template) {
        super(new IMObjectReporter<T>(object, template));
    }

    /**
     * Constructs a new <tt>IMReportPrinter</tt> to print a collection of
     * objects.
     *
     * @param objects   the objects to print
     * @param shortName the archetype short name to determine the template to
     *                  use
     * @throws OpenVPMSException for any error
     */
    public IMObjectReportPrinter(Iterable<T> objects, String shortName) {
        this(objects, shortName, null);
    }

    /**
     * Constructs a new <tt>IMReportPrinter</tt> to print a collection of
     * objects.
     *
     * @param objects   the objects to print
     * @param shortName the archetype short name to determine the template to
     *                  use
     * @param template  the document template to use. May be <tt>null</tt>
     * @throws OpenVPMSException for any error
     */
    public IMObjectReportPrinter(Iterable<T> objects, String shortName, DocumentTemplate template) {
        super(new IMObjectReporter<T>(objects, shortName, template));
    }

}

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2.3.dtd">

<web-app>
    <display-name>OpenVPMS</display-name>
    <description>OpenVPMS</description>

    <!-- echo2 configuration -->
    <servlet>
        <servlet-name>SpringWebContainerServlet</servlet-name>
        <servlet-class>org.openvpms.web.spring.SpringWebContainerServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>SpringWebContainerServlet</servlet-name>
        <url-pattern>/app</url-pattern>
    </servlet-mapping>

    <!-- Acegi/Spring config -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/applicationContext.xml
            /WEB-INF/applicationContext-authentication.xml
        </param-value>
    </context-param>

    <!-- log4j config -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/classes/log4j.properties</param-value>
    </context-param>

    <!--  Setup the Acegi Filter Chain Proxy -->
    <filter>
        <filter-name>Acegi Filter Chain Proxy</filter-name>
        <filter-class>org.acegisecurity.util.FilterToBeanProxy</filter-class>
        <init-param>
            <param-name>targetClass</param-name>
            <param-value>org.acegisecurity.util.FilterChainProxy</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>Acegi Filter Chain Proxy</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--
     - Loads the root application context of this web app at startup,
     - by default from "/WEB-INF/applicationContext.xml".
     - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
     - to access it anywhere in the web application, outside of the framework.
     -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--	Setup a listener to connect spring with log4j -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!--  Setup ACEGI to subscribe to http session events in the web context -->
    <listener>
        <listener-class>org.acegisecurity.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>

<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Version: 1.0
  ~
  ~ The contents of this file are subject to the OpenVPMS License Version
  ~ 1.0 (the 'License'); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~ http://www.openvpms.org/license/
  ~
  ~ Software distributed under the License is distributed on an 'AS IS' basis,
  ~ WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  ~ for the specific language governing rights and limitations under the
  ~ License.
  ~
  ~ Copyright 2014 (C) OpenVPMS Ltd. All Rights Reserved.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="propertyPlaceholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">

        <!-- allow system properties to override any other property source -->
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
    </bean>

    <!--  The data source -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- Configure CacheManager from specified config location -->
    <bean id="cacheManager"
          class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"/>
        <property name="shared" value="true"/>
    </bean>

    <!--  Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.SingletonEhCacheProvider</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.jdbc.batch_size">30</prop>
                <prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop>
                <prop key="hibernate.jdbc.fetch_size">100</prop>
            </props>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath*:org/openvpms/component/business/dao/**/*.hbm.xml</value>
                <value>classpath*:org/openvpms/archetype/rules/**/*.hbm.xml</value>
            </list>
        </property>
    </bean>

    <bean id="txnManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--  The IMObject DAO bean -->
    <bean id="imObjectDao"
          class="org.openvpms.component.business.dao.hibernate.im.IMObjectDAOHibernate">
        <constructor-arg ref="sessionFactory"/>
        <property name="transactionManager" ref="txnManager"/>
    </bean>

    <bean id="archetypeDescriptorCache"
          class="org.openvpms.component.business.service.archetype.descriptor.cache.ArchetypeDescriptorCacheDB">
        <constructor-arg ref="imObjectDao"/>
    </bean>

    <!--  The Archetype Service -->
    <bean id="defaultArchetypeService"
          class="org.openvpms.component.business.service.archetype.ArchetypeService">
        <constructor-arg ref="archetypeDescriptorCache"/>
        <property name="dao" ref="imObjectDao"/>
    </bean>

    <bean id="archetypeService"
          class="org.openvpms.component.business.service.archetype.rule.ArchetypeRuleService">
        <constructor-arg ref="defaultArchetypeService"/>
        <constructor-arg ref="ruleEngine"/>
        <constructor-arg ref="txnManager"/>
        <property name="facts">
            <list>
                <ref bean="currencies"/>
                <ref bean="lookupService"/>
                <ref bean="txnManager"/>
            </list>
        </property>
    </bean>


    <bean id="archetypeServiceHelper"
          class="org.openvpms.component.business.service.archetype.ArchetypeServiceHelper">
        <constructor-arg ref="archetypeService"/>
    </bean>

    <bean id="reminderRules" class="org.openvpms.archetype.rules.patient.reminder.ReminderRules">
        <constructor-arg ref="defaultArchetypeService"/>
        <constructor-arg ref="patientRules"/>
    </bean>

    <bean id="customerRules" class="org.openvpms.archetype.rules.party.CustomerRules">
        <constructor-arg ref="defaultArchetypeService"/>
    </bean>

    <bean id="customerAccountRules" class="org.openvpms.archetype.rules.finance.account.CustomerAccountRules">
        <constructor-arg ref="archetypeService"/>
    </bean>

    <!-- The JXPathHelper class, used to register extension functions -->
    <bean id="jxpathHelper"
          class="org.openvpms.component.system.common.jxpath.JXPathHelper">
        <constructor-arg>
            <map>
                <entry key="openvpms"
                       value="org.openvpms.component.business.service.archetype.ArchetypeServiceFunctions"/>
                <entry key="date"
                       value="org.openvpms.component.system.common.jxpath.DateFunctions"/>
                <entry key="lookup"
                       value="org.openvpms.archetype.function.lookup.LookupFunctions"/>
                <entry key="party">
                    <bean class="org.openvpms.archetype.function.party.PartyFunctions">
                        <constructor-arg index="0" ref="archetypeService"/>
                        <constructor-arg index="1" ref="patientRules"/>
                        <constructor-arg index="2" ref="customerAccountRules"/>
                    </bean>
                </entry>
                <entry key="math">
                    <bean class="org.openvpms.archetype.function.math.MathFunctions"/>
                </entry>
                <entry key="reminder">
                    <bean class="org.openvpms.archetype.function.reminder.ReminderFunctions">
                        <constructor-arg index="0" ref="archetypeService"/>
                        <constructor-arg index="1" ref="reminderRules"/>
                        <constructor-arg index="2" ref="customerRules"/>
                    </bean>
                </entry>
                <entry key="expr">
                    <bean class="org.openvpms.archetype.function.expression.ExpressionFunctions">
                        <constructor-arg value="expr"/>
                    </bean>
                </entry>
                <entry key="history">
                    <bean class="org.openvpms.archetype.function.history.HistoryFunctions">
                        <constructor-arg index="0" ref="archetypeService"/>
                    </bean>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <!-- ================================================================== -->
    <!--                 RULES DEFINITIONS                                  -->
    <!-- ================================================================== -->

    <!-- The `local' ruleServiceProvider; we can have as many different ruleProviders as we want -->
    <bean id="ruleServiceProvider"
          class="org.springmodules.jsr94.factory.DefaultRuleServiceProviderFactoryBean">
        <property name="provider" value="http://drools.org"/>
        <property name="providerClass" value="org.drools.jsr94.rules.RuleServiceProviderImpl"/>
    </bean>

    <!-- The local ruleRuntime. Usually, there is one ruleRuntime bean for each ruleServiceProvider bean. -->
    <bean id="ruleRuntime"
          class="org.springmodules.jsr94.factory.RuleRuntimeFactoryBean">
        <property name="serviceProvider" ref="ruleServiceProvider"/>
    </bean>

    <!-- the local ruleAdministrator. Usually, there is one ruleAdministrator bean for each ruleServiceProvider bean -->
    <bean id="ruleAdministrator"
          class="org.springmodules.jsr94.factory.RuleAdministratorFactoryBean">
        <property name="serviceProvider" ref="ruleServiceProvider"/>
    </bean>

    <!-- the ruleSource. There can be many ruleSource beans for each ruleAdministrator/ruleRuntime. -->
    <bean id="ruleSource"
          class="org.openvpms.component.business.service.ruleengine.RuleDescriptorRuleSource">
        <property name="ruleRuntime" ref="ruleRuntime"/>
        <property name="ruleAdministrator" ref="ruleAdministrator"/>
    </bean>

    <!--  The Rule engine -->
    <bean id="ruleEngine"
          class="org.openvpms.component.business.service.ruleengine.RuleEngine">
        <constructor-arg ref="ruleSource"/>
    </bean>


    <!-- ================================================================== -->
    <!--                        MISC                                        -->
    <!-- ================================================================== -->

    <bean id="lookupService" class="org.openvpms.component.business.service.lookup.LookupService">
        <constructor-arg index="0">
            <ref local="archetypeService"/>
        </constructor-arg>
        <constructor-arg index="1">
            <ref local="imObjectDao"/>
        </constructor-arg>
    </bean>

    <bean id="lookupServiceHelper" class="org.openvpms.component.business.service.lookup.LookupServiceHelper">
        <constructor-arg>
            <ref local="lookupService"/>
        </constructor-arg>
    </bean>

    <bean id="currencies" class="org.openvpms.archetype.rules.math.Currencies">
        <constructor-arg ref="archetypeService"/>
        <constructor-arg ref="lookupService"/>
    </bean>

    <bean id="patientRules" class="org.openvpms.archetype.rules.patient.PatientRules">
        <constructor-arg ref="archetypeService"/>
        <constructor-arg ref="lookupService"/>
        <constructor-arg>
            <null/>
        </constructor-arg>
    </bean>

    <bean id="imObjectBeanFactory" class="org.openvpms.component.business.service.archetype.helper.IMObjectBeanFactory">
        <constructor-arg ref="archetypeService"/>
    </bean>


</beans>
